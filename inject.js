// Generated by LiveScript 1.4.0
(function(){
  var someNewFunc, getFrameByPattern, out$ = typeof exports != 'undefined' && exports || this;
  out$.someNewFunc = someNewFunc = function(){
    return console.log('somenewfunc works!');
  };
  out$.getFrameByPattern = getFrameByPattern = function(pattern){
    var iframe, i$, ref$, len$, x;
    iframe = document.querySelector(pattern);
    if (iframe == null || iframe.contentWindow == null) {
      return;
    }
    for (i$ = 0, len$ = (ref$ = window.frames).length; i$ < len$; ++i$) {
      x = ref$[i$];
      if (x === iframe.contentWindow) {
        return x;
      }
    }
  };
  console.log('inject added to ' + window.location.href);
  /*
  sendLocation = ->
    console.log 'calling sendLocation from ' + window.location.href
    parent.postMessage {type: 'sendlocation', location: window.location.href}, '*'
  
  setInterval sendLocation, 2000
  */
  /*
  window.addEventListener 'message', (evt, sender) ->
    #console.log 'message received'
    #console.log evt
    if not evt? or not evt.data?
      return
    etype = evt.data.type
    if not etype?
      return
    console.log 'message received'
    console.log evt
    if etype == 'getlocation'
      #iframeid = evt.data.iframeid
      location = window.location.href
      #console.log 'srcElement.frameElement'
      #console.log evt.srcElement.frameElement
      #console.log 'source.frameElement'
      #console.log evt.source.frameElement
      #console.log 'target.frameElement'
      #console.log evt.target.frameElement
      #console.log 'currentTarget.frameElement'
      #console.log evt.currentTarget.frameElement
      #framesrc = 'none'# window.frameElement.src
      evt.source.postMessage {type: 'sendlocation', location}, '*'#evt.origin
  */
  /*
  if etype == 'sendlocation'
    console.log 'received location'
    console.log evt
    console.log sender
    console.log 'srcElement.frameElement'
    console.log evt.srcElement.frameElement
    console.log 'source.frameElement'
    console.log evt.source.frameElement
    console.log 'target.frameElement'
    console.log evt.target.frameElement
    console.log 'currentTarget.frameElement'
    console.log evt.currentTarget.frameElement
    #console.log window.frameElement
    #console.log evt.source.frameElement.src
  */
  /*
  setInterval ->
    parent.postMessage 'hello world', '*' 
  , 2000
  
  window.addEventListener 'message', (evt, sender) ->
    console.log 'message received'
    console.log evt
    console.log evt.source.
    console.log sender
  */
}).call(this);
